// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

// USUÁRIOS

model User {
    id         Int      @id @default(autoincrement())
    name       String
    email      String   @unique
    type       String
    password   String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    orders     Order[]

    @@map("usuários")
}

// CATEGORIAS

model Category {
    id          Int      @id @default(autoincrement())
    created_at  DateTime @default(now())
    updated_at  DateTime @updatedAt
    title       String   @unique @db.VarChar(100)
    description String   @db.VarChar(300)
    published   Boolean  @default(false)
    Product     Product? @relation(fields: [productId], references: [id])
    productId   Int?

    @@map("categorias")
}

// PRODUTOS

model Product {
    id          Int        @id @default(autoincrement())
    created_at  DateTime   @default(now())
    updated_at  DateTime   @updatedAt
    title       String     @db.VarChar(100)
    description String     @db.VarChar(300)
    price       Float
    measures    String?    @db.VarChar(10)
    amount      Int
    subcategory String     @db.VarChar(100)
    image       String
    published   Boolean    @default(false)
    categories  Category[]
    Order       Order?     @relation(fields: [orderId], references: [id])
    orderId     Int?

    @@map("produtos")
}

// PEDIDOS
model Order {
    id             Int             @id @default(autoincrement())
    created_at     DateTime        @default(now())
    updated_at     DateTime        @updatedAt
    order_products OrderProducts[]
    amount         Int             @default(1)
    address        OrderAddress[]
    total_value    Float
    OrderStatus    String          @default("pending")
    products       Product[]
    User           User            @relation(fields: [user_id], references: [id])
    user_id        Int

    @@map("pedidos")
}

model OrderProducts {
    id         Int    @id @default(autoincrement())
    product_id String
    quantity   Int    @default(1)
    Order      Order  @relation(fields: [order_id], references: [id])
    order_id   Int

    @@map("produtos-do-pedido")
}

model OrderAddress {
    id         Int    @id @default(autoincrement())
    street     String
    number     Int
    complement String
    city       String
    state      String
    zipcode    String
    country    String
    Order      Order  @relation(fields: [order_id], references: [id])
    order_id   Int

    @@map("endereços")
}

// CARRINHO DE COMPRAS

model Cart {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    products   String
    quantity   Int      @default(1)

    @@map("carrinho-de-compras")
}
